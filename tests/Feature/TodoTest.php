<?php

namespace Tests\Feature;

use App\Models\User;
use Database\Seeders\TodoSeeder;
use Illuminate\Foundation\Testing\RefreshDatabase;
use Tests\TestCase;

class TodoTest extends TestCase
{
    private User $user;

    protected function setUp(): void
    {
        parent::setUp(); // TODO: Change the autogenerated stub
        $this->user = User::factory()->create();
        $this->seed(TodoSeeder::class);
    }

    use RefreshDatabase;

    public function testCanSeeIndex(): void
    {
        $response = $this->actingAs($this->user)->getJson('api/todo');

        $response->assertJsonStructure(['data']);

        $response->assertOk();
    }

    public function testCanStoreTodo()
    {
        $response = $this->actingAs($this->user)->postJson('api/todo', [
            'title' => fake()->text(10),
            'body' => fake()->text(),
        ]);
        $this->assertDatabaseCount('todos',11);
        $this->assertEquals('Todo Successfully created!',$response->json('message'));
        $response->assertOk();
    }

    public function testShowTodo()
    {
        $response = $this->actingAs($this->user)->getJson('api/todo/1');
        $response->assertJsonStructure(['data'],$response->content());
        $response->assertOk();
    }

    public function testUpdateTodo()
    {
        $response = $this->actingAs($this->user)->putJson('api/todo/update/1', [
            'title' => 'hello','body' => 'hello'
        ]);
        $this->assertDatabaseHas('todos', [
            'title' => 'hello',
        ]);
        $response->assertOk();
    }

    public function testDestroyTodo()
    {

        $response = $this->actingAs($this->user)->delete('api/todo/destroy/1');
        $this->assertDatabaseCount('todos',9);
        $response->assertOk();
    }
}
